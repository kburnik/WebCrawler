<?class ContentParser {	private function removeTagContents( $html , $tags ) 	{						$doc = new DOMDocument();						$doc->substituteEntities = false;					@$doc->loadHTML('<?xml encoding="UTF-8">'.$html);		foreach ( $tags as $tag ) 		{			// get all the script tags			$script_tags = $doc->getElementsByTagName( $tag );			$length = $script_tags->length;			// for each tag, remove it from the DOM			for ($i = $length-1; $i >=0; $i--) 			{				$child = $script_tags->item($i);								if ( $child != null ) 				{					$parentNode = $child->parentNode;										$parentNode->removeChild($script_tags->item($i));									}			  			}		}				$xpath = new DOMXpath($doc);		$textNodes = $xpath->query('//text()');		foreach ($textNodes as $textNode) {			$out .= $textNode->data . "\n";		}					return $out;								}	private function filterUnwantedChars( $content ) {		return strtr($content, array(			"\xA0" => '',					));	}		public function parse( $content ) 	{			$content = $this->removeTagContents($content,array("script","style"));				$content = strip_tags( $content );		$content = preg_replace('/\s+/', ' ', $content);				$content = trim( $content );		$content = $this->filterUnwantedChars( $content );				// utf-8 and ansi croatian chars		$special = 'ČĆŽŠĐčćžšđÑñ';		$term_pattern = "([A-Za-z{$special}]{1,}|[0-9]{1,})";		preg_match_all($term_pattern,$content,$results);				return $results[0];		}}?>